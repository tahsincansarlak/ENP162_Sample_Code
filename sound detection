// Tahsin Can Sarlak - Tufts ENP 162 Fall 2020 Sound Detection Experiment
 
//The following lines define the pins & variables we'll be using 
int but_pin = 5;
int led_pin = 4;
int beeper_pin = 7;
int state_but = 0;
int state_led = 0;

// The following variables will be used to set a tone on the buzzer
// This will be used when we want no sound from the buzzer
int frequency_low = 0;
// This will be used when we want sound from the buzzer
int frequency_high = 474;
// This will be used to determine how long the tone will play in milliseconds. 1000ms = 1s
int duration = 2000;

// The following variable will be used to decide if the buzzer will be turned on
int randNum;

// The following variables will be used to keep track of 
// the total number of trials and the conditions
int trial = 1;
int hitrate = 0;
int falsealarm = 0;
int miss = 0;
int correctrej = 0;

void setup() {
  // This will start the serial where you can write sensor values
  Serial.begin(9600);

  // This initializes the pin modes
  pinMode(but_pin,INPUT);
  pinMode(led_pin,OUTPUT);
  pinMode(beeper_pin,OUTPUT);
}

void loop() {
  // The code will run only 20 times since it can run only 
  // while the trial is less than 21
  while(trial<21){
    // Calls the function that does the experiment
    experiment();
    // Increases the number of trials each time the function is called
    trial++;
  }
}

// This is the main function that collects data and prints out the results
void experiment(){
  // Turns on the light 
  digitalWrite(led_pin,HIGH);
  // Decides if the beeper will be turned on or off randomly
  randNum = random(1,3);

  // Uses the random number to decide if the beeper is going to beep or not
  if(randNum == 1){
    tone(beeper_pin, frequency_low, duration);
    }
  else{
    tone(beeper_pin, frequency_high, duration);
    }
  
  // reads the digital voltage value and will store it in the variable.
  // It will be either 0 or 1
  state_but = digitalRead(but_pin);
  delay(500);

  // This is the logic behind the experiment. 
  // If the beeper is on and the button is pushed, you are in the hit rate zone
  // If the beeper is on and the button is not pushed, you are in the false alarm rate zone
  // If the beeper is off and the button is pushed, you are in the miss zone
  // If the beeper is off and the button is not pushed, you are in the correct reject zone
  if( randNum == 2 && state_but == 0){
    hitrate++;
  }
  else if( randNum == 2 && state_but == 1){
    falsealarm++;
  } 
  else if (randNum == 1 && state_but == 0){
    miss++;
  }
  else if (randNum == 1 && state_but == 1){
    correctrej++;
  }
  // Turns off the LED and the beeper before the next trial
  digitalWrite(led_pin,LOW);
  noTone(beeper_pin);
  delay(500);
  // Prints out the sensor readings with a comma in between
  // p5.js will use this information to print out the number of times each condition is met
  Serial.print(hitrate);Serial.print(",");Serial.print(falsealarm);Serial.print(",");Serial.print(miss);Serial.print(",");Serial.print(correctrej);Serial.print(",");Serial.println(trial); 
}
